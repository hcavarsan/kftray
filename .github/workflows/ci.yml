name: PR

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_DEV_DEBUG: 0
  RUST_BACKTRACE: 1

jobs:
  eslint-format:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.6

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21.7.1"
          cache: "pnpm"

      - name: Install pnpm dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Perform linting
        run: pnpm lint:front

  rust-format:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Rust nightly
        run: rustup toolchain install nightly

      - name: Install rustfmt for nightly
        run: rustup component add --toolchain nightly rustfmt

      - name: Run rustfmt
        run: cargo +nightly fmt --all -- --check

  rust-lint:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev libssl-dev libsoup2.4-dev

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21.7.1"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.6
          run_install: false

      - name: Run Clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  build-and-push-docker:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./crates/kftray-server
          file: ./crates/kftray-server/Dockerfile
          push: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/kftray-server:${{ github.sha }}
